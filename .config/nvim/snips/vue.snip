snippet script_with_Typescript
options head
    <script lang="ts" setup>
    ${0}
    </script>

snippet defineEmits
    defineEmits<{
      ${1}: [${2}];
    }>()${0}

snippet defineEmits_with_const
    const emit = defineEmits<{
      ${1}: [${2}];
    }>()${0}

snippet defineProps
    defineProps<{
      ${1}: ${2};
    }>()${0}

snippet defineProps_with_defaults
    withDefaults(defineProps<{
      ${1}: ${2};
    }>(), {
      $1: ${3},
    })

snippet defineProps_with_const
    const props = defineProps<{
      ${1}: ${2};
    }>()${0}

snippet defineProps_with_const_with_defaults
    const props = withDefaults(defineProps<{
      ${1}: ${2};
    }>(), {
      $1: ${3},
    })

snippet computed_writable
    computed({
      get() {
        ${1:return}
      },
      set() {
        ${2}
      }
    })${0}

snippet vmodel_component
    import { useVModel } from '@vueuse/core'

    const props = defineProps<{
      modelValue: ${1};
    }>()

    const emit = defineEmits<{
      'update:modelValue': [v: typeof props.modelValue];
    }>()

    const data = useVModel(props, 'modelValue', emit)${0}
